{"version":3,"sources":["utils.ts","server/request.ts","components/pin/index.tsx","server/api.ts","components/login/index.tsx","components/new-pin/index.tsx","components/pins/index.tsx","components/user/index.tsx","components/header/index.tsx","App.tsx","index.tsx"],"names":["message","config","duration","successNotification","description","msg","success","failNotification","error","handleResult","res","fail","data","status","beQueryString","obj","prefix","keys","Object","length","reduce","prev","cur","index","connector","baseUrl","getRequest","url","a","params","axios","get","postRequest","post","deleteRequest","delete","Pin","props","pin","title","user","createdAt","id","padding","num","padStart","then","onRefresh","err","console","log","className","href","target","username","date","d","Date","getFullYear","getMonth","getDate","getHours","getMinutes","formatTime","mode","placement","onConfirm","okText","cancelText","size","type","onClick","onEditModalVisible","blog","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useState","visible","setVisible","setType","computeStatusText","values","text","api","updateLoginStatus","loginStatus","footer","onCancel","name","onFinish","Item","label","rules","required","Password","block","htmlType","NewPin","handleOk","handleCancel","onOk","startsWith","includes","allowClear","TextArea","initialState","pageNo","pageSize","total","list","reducer","state","action","payload","loading","Pins","useReducer","dispatch","setMode","Form","useForm","form","getPins","onlyMine","handleEditModalVisible","find","setFieldsValue","onRefreshList","useEffect","checkedChildren","unCheckedChildren","onChange","checked","map","key","isLoading","current","patch","patchRequest","User","max","PopContent","Modal","confirm","icon","ExclamationCircleOutlined","content","Math","floor","random","color","style","backgroundColor","verticalAlign","shape","gap","slice","Header","App","setLoginStatus","setUsername","login","window","open","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a410128c.chunk.js","sourcesContent":["import {message} from \"antd\"\nimport {AxiosResponse} from \"axios\"\n\nmessage.config({\n  duration: 1.5,\n});\n\nexport const successNotification = (description: string, msg?: string) => {\n  message.success(description);\n}\n\nexport const failNotification = (description: string, msg?: string) => {\n  message.error(description)\n}\n\n\nexport interface Res {\n  msg: string;\n  data: object;\n  status: \"fail\" | \"ok\"\n}\n\ninterface PrimaryTypeObject {\n  [key: string]: any;\n}\n\nexport function getRandomInt(max: number) {\n  return Math.floor(Math.random() * Math.floor(max))\n}\n\ntype Callback = (msg: string) => void\n\nexport function handleResult(res: AxiosResponse<Res>, success: Callback, fail?: Callback) {\n  if (res.data.status === \"ok\") {\n    success(res.data.msg)\n  } else if (res.data.status === \"fail\") {\n    fail && fail(res.data.msg)\n  }\n}\n\nexport function beQueryString(obj: PrimaryTypeObject, prefix: string = \"?\"): string {\n  const keys = Object.keys(obj)\n  if (keys.length === 0) {\n    return \"\"\n  }\n  return keys.reduce((prev, cur, index) => {\n    let connector = \"\"\n    if (index !== 0) {\n      connector = \"&\"\n    }\n    return `${prev}${connector}${cur}=${obj[cur]}`\n  }, prefix)\n}\n\n","import axios from \"axios\"\nimport {beQueryString} from \"../utils\"\n\nconst baseUrl = \"http://47.98.241.215:8080\"\n// const baseUrl = \"http://192.168.0.143:8080\"\n// const baseUrl = \"http://localhost:8080\"\n\nexport const getRequest = async (url: string, params: object = {}) => {\n  return axios.get(baseUrl + url + beQueryString(params))\n}\n\nexport const postRequest = async (url: string, params?: object) => {\n  return axios.post(baseUrl + url, params)\n}\n\nexport const deleteRequest = (url: string, params: object = {}) => {\n  return axios.delete(baseUrl + url + beQueryString(params))\n}\n\nexport const patchRequest = (url: string, params: object = {}) => {\n  return axios.patch(baseUrl + url , params)\n}\n\n","import React from \"react\"\nimport \"./index.less\"\nimport {APin} from \"../pins\"\nimport {Button, Popconfirm} from \"antd\"\nimport {deleteRequest} from \"../../server/request\"\nimport {failNotification, successNotification} from \"../../utils\"\n\ninterface PinProps {\n  pin: APin,\n  mode: \"me\" | \"all\",\n  onEditModalVisible: Function,\n  onRefresh: Function\n}\n\nconst Pin: React.FC<PinProps> = (props) => {\n  const {title, url, description, user, createdAt, id} = props.pin\n\n  const style = {\n    fontSize: 20\n  }\n\n  function padding(num: number) {\n    return (num + \"\").padStart(2, \"0\");\n  }\n\n  function formatTime(date: string) {\n    const d = new Date(date)\n    const year = d.getFullYear();\n    const month = padding(d.getMonth() + 1) ;\n    const day = padding(d.getDate())\n    const hour = padding(d.getHours());\n    const minute = padding(d.getMinutes());\n\n    return year + \"-\" + month + \"-\" + day +\n      \" \" + hour + \":\" + minute\n  }\n\n  async function handleDelete() {\n    deleteRequest(\"/blog\", {\n      id\n    }).then(res => {\n      if (res.data.status === 'ok') {\n        successNotification(\"删除成功\")\n        props.onRefresh();\n      } else {\n        failNotification(res.data.msg)\n      }\n    }, (err) => {\n      console.log(err)\n    })\n  }\n\n  function handleEdit() {\n    props.onEditModalVisible(id);\n  }\n\n  return (\n    <div className=\"pin-wrapper\">\n      <div className=\"main-content\">\n        <a className=\"title\" href={url} target={\"_blank\"}>\n          {title}\n        </a>\n        <div className=\"instruction\">\n          {user.username}投稿[{formatTime(createdAt)}]\n        </div>\n      </div>\n      <div className=\"recommended-language\">\n        {description || \"他有点懒，没有写推荐语。\"}\n      </div>\n      {\n        props.mode === 'me' && (\n          <div className={\"operator-btn-group\"}>\n            <Popconfirm placement=\"topLeft\" title={\"确定要删除吗？\"} onConfirm={handleDelete} okText=\"是\" cancelText=\"否\">\n              <Button size={\"small\"} type={\"ghost\"}>删除</Button>\n            </Popconfirm>\n            <Button size={\"small\"} type={\"primary\"} onClick={handleEdit}>编辑</Button>\n          </div>\n        )\n      }\n\n      {/*<div className=\"infos\">*/}\n      {/*  <div className={'info'}>*/}\n      {/*    <HeartTwoTone style={style} twoToneColor=\"#fb7299\"  />*/}\n      {/*    <span className={'num'}>(12)</span>*/}\n      {/*  </div>*/}\n      {/*  <div className={'info'}>*/}\n      {/*    <MessageTwoTone style={style} twoToneColor=\"#fb7299\"  />*/}\n      {/*    <span className={'num'}>(12)</span>*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n\n    </div>\n  )\n}\n\nexport default Pin\n","export const auth = \"/auth\"\nexport const login = \"/auth/login\"\nexport const register = \"/auth/register\"\nexport const logout = \"/auth/logout\"\n\nexport const blog = \"/blog\"\n\n","import React, {Fragment, useState} from \"react\"\nimport {Button, Form, Input, Modal} from \"antd\"\nimport \"./index.scss\"\nimport {postRequest} from \"../../server/request\"\nimport {login, register} from \"../../server/api\"\nimport {failNotification, handleResult, Res, successNotification} from \"../../utils\"\nimport {AxiosResponse} from \"axios\"\n\nexport const layout = {\n  labelCol: {span: 6},\n  wrapperCol: {span: 16}\n}\nexport const tailLayout = {\n  wrapperCol: {offset: 6, span: 16}\n}\n\ninterface LoginValues {\n  username: string;\n  password: string;\n}\n\ninterface LoginProps {\n  loginStatus?: boolean;\n  username?: string;\n  updateLoginStatus: (status: boolean) => void\n}\n\n\nconst Login: React.FC<LoginProps> = (props) => {\n  const [visible, setVisible] = useState<boolean>()\n  const [type, setType] = useState<\"login\" | \"register\">()\n\n  function handleCancel() {\n    setVisible(false)\n  }\n\n  function computeStatusText() {\n    return type === \"login\" ? \"登录\" : \"注册\"\n  }\n\n  async function onFinish(values: LoginValues) {\n    const text = computeStatusText()\n    const api = type === \"login\" ? login : register\n\n    try {\n      const res: AxiosResponse<Res> = await postRequest(api, values)\n      handleResult(res, () => {\n        successNotification(text + \"成功\")\n        props.updateLoginStatus(true)\n        setVisible(false)\n      }, (msg) => {\n        failNotification(msg)\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  function handleLogin() {\n    setType(\"login\")\n    setVisible(true)\n  }\n\n\n  function handleRegister() {\n    setType(\"register\")\n    setVisible(true)\n  }\n\n  return (\n    <div className={\"pins-login\"}>\n      {\n        !props.loginStatus &&\n        <Fragment>\n            <div className={\"login\"} onClick={handleLogin}>登录</div>\n            <div className={\"register\"} onClick={handleRegister}>注册</div>\n        </Fragment>\n      }\n      <Modal\n        title={computeStatusText()}\n        footer={null}\n        visible={visible}\n        onCancel={handleCancel}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={onFinish}\n        >\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[{required: true, message: \"Please input your username!\"}]}\n          >\n            <Input/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{required: true, message: \"Please input your password!\"}]}\n          >\n            <Input.Password/>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" block htmlType=\"submit\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Login\n","import React, {useState} from \"react\"\nimport {Button, Form, Input, Modal} from \"antd\"\nimport {layout, tailLayout} from \"../login\"\nimport {postRequest} from \"../../server/request\"\nimport {blog} from \"../../server/api\"\nimport {failNotification, successNotification} from \"../../utils\"\n\ninterface Values {\n  title: string;\n  url: string;\n  description: string;\n}\n\nconst NewPin = () => {\n  const [visible, setVisible] = useState<boolean>()\n\n  function handleOk() {\n    setVisible(true)\n  }\n\n  function handleCancel() {\n    setVisible(false)\n  }\n\n  function onFinish(values: Values) {\n    const url = values.url\n\n    if (!url.startsWith(\"https://\") && !url.startsWith(\"http://\")) {\n      failNotification(\"正确的链接应该以 http 或者 https 开头\")\n      return\n    } else if (url.includes(\"blog.csdn\")) {\n      failNotification(\"不允许任何垃圾 CSDN 的链接!!!\")\n      return\n    }\n\n    postRequest(blog, {\n      ...values,\n      type: 1\n    }).then((res) => {\n      successNotification(\"新增成功\")\n      handleCancel()\n    }, (err) => {\n      failNotification(\"没有登录是不能投稿的\")\n    })\n\n  }\n\n  return (\n    <div>\n      <Button type={\"primary\"} className={\"new-pins-btn\"} onClick={handleOk}>投稿</Button>\n      <Modal\n        title=\"投稿\"\n        visible={visible}\n        onOk={handleOk}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={onFinish}\n        >\n          <Form.Item\n            label=\"标题\"\n            name=\"title\"\n            rules={[{required: true}]}\n          >\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"链接地址\"\n            name=\"url\"\n            rules={[{required: true}]}\n          >\n            <Input allowClear/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"推荐语\"\n            name=\"description\"\n          >\n            <Input.TextArea/>\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" block htmlType=\"submit\">\n              投一个\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default NewPin\n","import React, {useEffect, useReducer, useState} from \"react\"\nimport Pin from \"../pin\"\nimport NewPin from \"../new-pin\"\nimport \"./index.less\"\nimport {Button, Form, Input, Modal, Pagination, Spin, Switch} from \"antd\"\nimport {getRequest, patchRequest} from \"../../server/request\"\nimport {blog} from \"../../server/api\"\nimport {failNotification, successNotification} from \"../../utils\"\nimport {layout, tailLayout} from \"../login\"\n\n\ninterface PinReducerState {\n  pageNo: number;\n  pageSize: number;\n  total: number;\n  list: APin[];\n  pin: APin;\n}\n\ninterface PinReducerAction {\n  type: string;\n  payload: any;\n}\n\nexport interface APin {\n  id: number;\n  title: string;\n  description: string;\n  url: string;\n  createdAt: string\n  user: {\n    username: string\n  }\n}\n\nconst initialState = {\n  pageNo: 1,\n  pageSize: 6,\n  total: 0,\n  list: [],\n  pin: {}\n}\n\n\nfunction reducer(state: PinReducerState, action: PinReducerAction) {\n  switch (action.type) {\n    case \"updatePagination\":\n      return {\n        ...state,\n        ...action.payload\n      }\n    case \"updateList\":\n      return {\n        ...state,\n        list: action.payload\n      }\n    case \"setLoading\":\n      return {\n        ...state,\n        loading: action.payload\n      }\n    case \"setCurrentPin\":\n      return {\n        ...state,\n        pin: action.payload\n      }\n    default:\n      return state\n  }\n}\n\ninterface PinsProps {\n  loginStatus?: boolean;\n}\n\nconst Pins: React.FC<PinsProps> = (props) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const [mode, setMode] = useState<\"me\" | \"all\">(\"all\")\n  const [visible, setVisible] = useState<boolean>()\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (mode === \"me\") {\n      getPins(1, state.pageSize, true)\n    } else if(mode === 'all') {\n      getPins(1, state.pageSize)\n   }\n  }, [mode])\n\n  async function getPins(pageNo: number, pageSize: number, onlyMine:boolean = false) {\n    dispatch({type: \"setLoading\", payload: true})\n    try {\n      const res = await getRequest(blog, {pageNo, pageSize, onlyMine})\n\n      dispatch({\n        type: \"updatePagination\",\n        payload: {\n          pageNo: pageNo,\n          total: res.data.total\n        }\n      })\n\n      dispatch({type: \"updateList\", payload: res.data.list})\n    } catch (e) {\n      failNotification(\"没有权限访问，是不是没有登录？\")\n    } finally {\n      dispatch({type: \"setLoading\", payload: false})\n    }\n  }\n\n  function handleSearch(pageNo: number = 1, pageSize: number = 10) {\n    getPins(pageNo, pageSize)\n  }\n\n  function switchMode(checked: boolean) {\n    setMode(checked ? \"me\" : \"all\")\n  }\n\n  function handleCancel() {\n    setVisible(false)\n  }\n\n  function onFinish(values: APin) {\n    patchRequest(`/blog/${state.pin.id}`, {\n      ...values\n    }).then(res => {\n      console.log(res)\n      setVisible(false)\n      successNotification(\"修改成功\")\n      getPins(1, state.pageSize, mode === \"me\");\n    })\n  }\n\n  function handleEditModalVisible(id: number) {\n    setVisible(true)\n    const pin = state.list.find((pin: APin) => pin.id === id);\n    dispatch({\n      type: \"setCurrentPin\",\n      payload: pin\n    })\n\n    form.setFieldsValue({\n      title: pin.title,\n      description: pin.description,\n      url: pin.url\n    })\n  }\n\n  function onRefreshList() {\n    getPins(1, state.pageSize, mode === \"me\");\n  }\n\n  return (\n    <div className={\"pins-wrapper\"}>\n      <div className={\"switch-mode\"}>\n        {\n          props.loginStatus && (\n            <Switch checkedChildren={\"只看我\"} unCheckedChildren={\"看全部\"} onChange={switchMode}/>\n          )\n        }\n      </div>\n      <NewPin/>\n      <div className=\"pins-container\">\n        {\n          state.list.map(function (pin: APin) {\n            return (\n              <Pin\n                mode={mode}\n                pin={pin}\n                onRefresh={onRefreshList}\n                onEditModalVisible={handleEditModalVisible}\n                key={pin.id}/>\n            )\n          })\n        }\n      </div>\n      {state.isLoading && <Spin/>}\n      {state.list.length > 0 &&\n      <Pagination\n          current={state.pageNo}\n          pageSize={state.pageSize}\n          total={state.total}\n          onChange={handleSearch}\n      />}\n      <Modal\n        title=\"投稿\"\n        visible={visible}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <Form\n          {...layout}\n          name=\"basic\"\n          form={form}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            label=\"标题\"\n            name=\"title\"\n            rules={[{required: true}]}\n          >\n            <Input/>\n          </Form.Item>\n          <Form.Item\n            label=\"链接地址\"\n            name=\"url\"\n            rules={[{required: true}]}\n          >\n            <Input allowClear/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"推荐语\"\n            name=\"description\"\n          >\n            <Input.TextArea/>\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" block htmlType=\"submit\">\n              修改\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Pins\n","import React, {useState} from \"react\"\nimport {Avatar, Modal, Popover} from \"antd\"\nimport \"./index.scss\"\nimport {getRandomInt, handleResult, successNotification} from \"../../utils\"\nimport {ExclamationCircleOutlined} from \"@ant-design/icons\"\nimport {getRequest} from \"../../server/request\"\nimport {logout} from \"../../server/api\"\n\ninterface UserProps {\n  loginStatus?: boolean;\n  username?: string;\n  updateLoginStatus: (statue: boolean) => void\n}\n\nconst User: React.FC<UserProps> = (props) => {\n  const {username} = props\n\n  function handleLogout() {\n    Modal.confirm({\n      title: \"Confirm\",\n      icon: <ExclamationCircleOutlined/>,\n      content: \"确认要登出吗？\",\n      okText: \"确认\",\n      cancelText: \"取消\",\n      onOk: () => {\n        getRequest(logout).then(res => {\n          handleResult(res, () => {\n            successNotification(\"登出成功\")\n            props.updateLoginStatus(false)\n          })\n        })\n      }\n    })\n  }\n\n  const PopContent = (\n    <div className=\"profile-list\">\n      <div className=\"profile-item\" onClick={handleLogout}>登出</div>\n    </div>\n  )\n\n  const ColorList = [\"#f56a00\", \"#7265e6\", \"#ffbf00\", \"#00a2ae\"]\n\n  const [color] = useState(ColorList[getRandomInt(3)])\n\n  return (\n    <div>\n      {props.loginStatus && (\n        <div>\n          <Popover placement=\"bottomLeft\" title={username} content={PopContent}>\n            <Avatar\n              style={{backgroundColor: color, verticalAlign: \"middle\"}}\n              size={36}\n              shape={\"circle\"}\n              gap={4}\n            >\n              {username ? username.slice(0, 6) : \"\"}\n            </Avatar>\n          </Popover>\n\n        </div>\n      )\n      }</div>\n  )\n}\n\nexport default User\n","import React from \"react\"\nimport User from \"../user\"\nimport Login from \"../login\"\nimport \"./index.less\"\n\ninterface HeaderProps {\n  loginStatus?: boolean;\n  username?: string;\n  updateLoginStatus: (status: boolean) => void;\n}\n\nconst Header:React.FC<HeaderProps> = (props) => {\n\n  return (\n    <div className=\"pins-header\">\n      <div className=\"pins-left-header\">\n        <h3 className={\"project-name\"}/>\n      </div>\n      <div className=\"pins-right-header\">\n        <Login loginStatus={props.loginStatus} updateLoginStatus={props.updateLoginStatus}/>\n        <User loginStatus={props.loginStatus} updateLoginStatus={props.updateLoginStatus} username={props.username}/>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React, {useEffect, useState} from \"react\"\nimport Pins from \"./components/pins\"\nimport \"antd/dist/antd.less\"\nimport \"./App.less\"\nimport Header from \"./components/header\"\nimport {Button} from \"antd\"\nimport {getRequest} from \"./server/request\"\nimport {auth} from \"./server/api\"\n\nfunction App() {\n  const [loginStatus, setLoginStatus] = useState<boolean>()\n  const [username, setUsername] = useState<string>()\n\n\n  useEffect(() => {\n    updateLoginStatus()\n  }, [])\n\n  function updateLoginStatus() {\n    getRequest(auth).then(res => {\n\n      setLoginStatus(res.data.login)\n      res.data.data && setUsername(res.data.data.username)\n    })\n  }\n\n\n  function handleCodeResourceClick() {\n    window.open(\"https://github.com/mysteryven/spring-demo\", \"_blank\")\n  }\n\n  return (\n    <div className=\"App\">\n      <Header updateLoginStatus={updateLoginStatus} loginStatus={loginStatus} username={username} />\n      <Pins loginStatus={loginStatus} />\n      <Button className={\"code-resource\"} onClick={handleCodeResourceClick}>源码地址</Button>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}